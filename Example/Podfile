source 'https://github.com/Originate/OriginateTheme.git'
use_frameworks!

target 'OriginateTheme-Example' do
  pod 'OriginateTheme', :git => 'https://github.com/Originate/OriginateTheme.git'
end


post_install do |installer|
  install_originatetheme_generator_script installer
end


def install_originatetheme_generator_script installer
  ot_script_log_prefix = '* [OriginateTheme]'
  ot_build_script_name = '[OriginateTheme] Generate Theme Files'
  ot_build_script = '"${PODS_ROOT}/OriginateTheme/OriginateTheme/Scripts/ot_generator.py" -i "${OTTHEME}" -o "${PODS_ROOT}/OriginateTheme/OriginateTheme/Sources/Classes/"'

  project = installer.pods_project
  target = project.targets.find { |t| t.name == 'OriginateTheme' }
  script_installed = target.shell_script_build_phases.any? { |s| s.name == ot_build_script_name }

  puts "#{ot_script_log_prefix} Beginning generator script installation..."

  if !script_installed
    # create build phase
    build_phase = begin
      phase = project.new(Xcodeproj::Project::Object::PBXShellScriptBuildPhase)
      phase.name = ot_build_script_name
      phase.shell_script = ot_build_script
      phase
    end

    # insert build phase before "Compile Sources" (otherwise, we could simply use `new_shell_script_build_phase`)
    compile_phase_index = target.build_phases.index { |p| p.class == Xcodeproj::Project::Object::PBXSourcesBuildPhase } || 0
    target.build_phases.insert(compile_phase_index, phase)

    # save changes
    project.save()

    puts "#{ot_script_log_prefix} Added generator script as Build Phase of '#{target.name}' target."
  else
    puts "#{ot_script_log_prefix} Nothing to do. Generator script is already installed as Build Phase of '#{target.name}' target."
  end
end


# 1. make method check if OTTHEME is properly set up, if not then warn and point to intstructions to add user-defined setting
